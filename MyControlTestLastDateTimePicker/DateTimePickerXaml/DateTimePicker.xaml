<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:DateTimePicker="clr-namespace:MyControlTestLastDateTimePicker.DateTimePickerCs"
                    xmlns:Converter="clr-namespace:MyControlTestLastDateTimePicker.Converter"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore">
    <!--转换器-->
    <Converter:DateTextBoxConverter x:Key="DateTextBoxConverter" />
    <Converter:CalendarConverter x:Key="CalendarConverter" />
    <Converter:HourComboBoxConverter x:Key="HourComboBoxConverter" />
    <Converter:HourAngleConverter x:Key="HourAngleConverter" />
    <Converter:MinuteComboBoxConverter x:Key="MinuteComboBoxConverter" />
    <Converter:MinuteAngleConverter x:Key="MinuteAngleConverter" />
    <Converter:SecondComboBoxConverter x:Key="SecondComboBoxConverter" />
    <Converter:SecondAngleConverter x:Key="SecondAngleConverter" />
    <Converter:AmPmComboBoxConverter x:Key="AmPmComboBoxConverter" />
    <Converter:TimeContainerConverter x:Key="TimeContainerConverter" />
    <!--表盘的大刻度线-->
    <Converter:ClockDegreeConverter x:Key="ClockDegreeConverter"
                                    TotalParts="60" />
    <x:Array x:Key="FiveMinuteKeys" Type="system:Int32">
        <system:Int32>0</system:Int32>
        <system:Int32>5</system:Int32>
        <system:Int32>10</system:Int32>
        <system:Int32>15</system:Int32>
        <system:Int32>20</system:Int32>
        <system:Int32>25</system:Int32>
        <system:Int32>30</system:Int32>
        <system:Int32>35</system:Int32>
        <system:Int32>40</system:Int32>
        <system:Int32>45</system:Int32>
        <system:Int32>50</system:Int32>
        <system:Int32>55</system:Int32>
    </x:Array>
    <DataTemplate x:Key="FiveMinuteIndicator">
        <StackPanel Height="57"
                    Orientation="Horizontal"
                    RenderTransformOrigin=".5,1">
            <StackPanel.RenderTransform>
                <RotateTransform Angle="{Binding Converter={StaticResource ClockDegreeConverter}, Mode=OneTime}" />
            </StackPanel.RenderTransform>
            <Rectangle Width="2"
                       Height="10"
                       Margin="0 -49 0 0"
                       Fill="#46B4E2" />
        </StackPanel>
    </DataTemplate>
    <!--DatePickerTextBox控件样式-->
    <Style x:Key="NewDatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                    <Grid>
                        <Grid.Resources>
                            <SolidColorBrush x:Key="WatermarkBrush" Color="#FFFFFF" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="WatermarkStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unwatermarked" />
                                <VisualState x:Name="Watermarked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="ContentElement" />
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_Watermark" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="FocusVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1"
                                Padding="{TemplateBinding Padding}">
                            <Grid x:Name="WatermarkContent"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border x:Name="ContentElement" BorderThickness="0" />
                                <Border x:Name="watermark_decorator" BorderThickness="0"
                                        Width="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False"
                                                    Opacity="0" Padding="2" Width="300" />
                                </Border>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="0"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                                <Border x:Name="FocusVisual" BorderBrush="Transparent" CornerRadius="1"
                                        IsHitTestVisible="False" Opacity="0"
                                        Width="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Button控件样式-->
    <Style x:Key="NewButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder" Height="25" Width="25" Padding="4">
                        <Path x:Name="ButtonPath" Fill="#808080" Stretch="Fill"
                              VerticalAlignment="Center" HorizontalAlignment="Center"
                              Data="M34,52H31V38.5C29.66,39.9 28.16,40.78 26.34,41.45V37.76C27.3,37.45 28.34,36.86 29.46,36C30.59,35.15 31.36,34.15 31.78,33H34V52M45,52V48H37V45L45,33H48V45H50V48H48V52H45M45,45V38.26L40.26,45H45M18,57V23H23V20A2,2 0 0,1 25,18H29C30.11,18 31,18.9 31,20V23H45V20A2,2 0 0,1 47,18H51C52.11,18 53,18.9 53,20V23H58V57H18M21,54H55V31H21V54M48.5,20A1.5,1.5 0 0,0 47,21.5V24.5A1.5,1.5 0 0,0 48.5,26H49.5C50.34,26 51,25.33 51,24.5V21.5A1.5,1.5 0 0,0 49.5,20H48.5M26.5,20A1.5,1.5 0 0,0 25,21.5V24.5A1.5,1.5 0 0,0 26.5,26H27.5A1.5,1.5 0 0,0 29,24.5V21.5A1.5,1.5 0 0,0 27.5,20H26.5Z" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonPath" Property="Fill" Value="#3BABDB" />
                            <Setter TargetName="ButtonBorder" Property="Background" Value="#E0E0E0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Calendar控件样式与CalendarItem控件样式-->
    <Style x:Key="NewCalendarStyle" TargetType="{x:Type Calendar}">
        <Setter Property="CalendarDayButtonStyle">
            <Setter.Value>
                <Style TargetType="CalendarDayButton">
                    <Setter Property="Height" Value="18" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#DBF1FA" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="#ffffff" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFE4EAF0" Offset="0" />
                    <GradientStop Color="#FFECF0F4" Offset="0.16" />
                    <GradientStop Color="#FFFCFCFD" Offset="0.16" />
                    <GradientStop Color="#FFFFFFFF" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem" BorderThickness="0" Background="#FFFFFF"
                                      Style="{DynamicResource NewCalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="NewCalendarItemStyle" TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Foreground="#FF333333" FontWeight="Bold" FontSize="13" FontFamily="Verdana"
                                       HorizontalAlignment="Center" Margin="0,5" Text="{Binding}"
                                       VerticalAlignment="Center" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" CornerRadius="1">
                            <Border BorderBrush="#FFFFFFFF" BorderThickness="2" CornerRadius="1">
                                <Grid>
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1"
                                                                                 Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                                 Storyboard.TargetName="path" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill" />
                                                <Grid>
                                                    <Path x:Name="path" Fill="#FFFFFF" Opacity="0.75"
                                                          Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                          HorizontalAlignment="Left" Height="10" Margin="14,-2,0,0"
                                                          Stretch="Fill" VerticalAlignment="Center" Width="6" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1"
                                                                                 Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                                 Storyboard.TargetName="path" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill" />
                                                <Grid>
                                                    <Path x:Name="path"
                                                          Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                          Fill="#FFFFFF" Opacity="0.75" HorizontalAlignment="Right"
                                                          Height="10" Margin="0,-2,14,0" Stretch="Fill"
                                                          VerticalAlignment="Center" Width="6" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1"
                                                                                 Storyboard.TargetProperty="Opacity"
                                                                                 Storyboard.TargetName="buttonContent" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <ContentPresenter x:Name="buttonContent"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  Content="{TemplateBinding Content}"
                                                                  TextElement.Foreground="#FFFFFF" Opacity="0.85"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  Margin="1,8,1,10"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Background="#41B1E1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Button x:Name="PART_PreviousButton" Grid.Column="0" Focusable="False"
                                                HorizontalAlignment="Left" Height="20" Grid.Row="0"
                                                Template="{StaticResource PreviousButtonTemplate}" Width="28" />
                                        <Button x:Name="PART_HeaderButton" Grid.Column="1" FontWeight="Bold"
                                                Focusable="False" FontSize="10.5" HorizontalAlignment="Center"
                                                Grid.Row="0" Template="{StaticResource HeaderButtonTemplate}"
                                                VerticalAlignment="Center" />
                                        <Button x:Name="PART_NextButton" Grid.Column="2" Focusable="False"
                                                HorizontalAlignment="Right" Height="20" Grid.Row="0"
                                                Template="{StaticResource NextButtonTemplate}" Width="28" />
                                    </Grid>
                                    <Grid x:Name="PART_MonthView" Grid.ColumnSpan="3" HorizontalAlignment="Center"
                                          Margin="6,-1,6,6" Grid.Row="1" Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid x:Name="PART_YearView" Grid.ColumnSpan="3" HorizontalAlignment="Center"
                                          Margin="6,-3,7,6" Grid.Row="1" Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual" Fill="{StaticResource DisabledColor}" Opacity="0"
                                   RadiusY="2" RadiusX="2" Stretch="Fill" Stroke="{StaticResource DisabledColor}"
                                   StrokeThickness="1" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible" />
                        </Trigger>
                        <DataTrigger
                            Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                            Value="Year">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                            Value="Decade">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ComboBox控件样式-->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#ffffff" Offset="0.0" />
        <GradientStop Color="#ffffff" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#CCCCCC" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#CCCCCC" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#000000" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FFFFFF" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#000000" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FFFFFF" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0.0" />
        <GradientStop Color="#FFFFFF" Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060" />
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1"
                                HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow"
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0"
                                  VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Static.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow"
                                    Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition
                                    Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                    Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter Property="BorderBrush" TargetName="templateRoot"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter Property="Background" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter Property="BorderBrush" TargetName="splitBorder"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <!--不可编辑状态的下拉框模板-->
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Border x:Name="dropDownBorder"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Width="42">
                    <ScrollViewer x:Name="DropDownScrollViewer" MaxHeight="300">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                    Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF" />
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <!--可编辑状态的下拉框模板-->
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Border x:Name="dropDownBorder"
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top"
                                    Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                          Grid.ColumnSpan="2"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}"
                    Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                         Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left" TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="NewComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--日期时间控件样式-->
    <Style x:Key="DateTimePicker" TargetType="{x:Type DateTimePicker:DateTimePicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="DatePickerBorder" BorderBrush="#CCCCCC" BorderThickness="1">
                        <Grid Height="25" Background="#ffffff">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DatePickerTextBox x:Name="PART_DatePickerTextBox" Grid.Column="0"
                                               AutoWordSelection="False"
                                               Style="{StaticResource NewDatePickerTextBoxStyle}"
                                               VerticalAlignment="Center" Margin="4 0 0 0"
                                               input:InputMethod.IsInputMethodEnabled="false" CaretBrush="Transparent"
                                               IsReadOnly="True" IsTabStop="False" />
                            <Button Grid.Column="1" x:Name="PART_Button" Width="25"
                                    Style="{StaticResource NewButtonStyle}" IsTabStop="False" />
                            <Popup x:Name="PART_Popup"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom" IsOpen="False" VerticalOffset="1" StaysOpen="False">
                                <Border BorderThickness="1" Padding="2 0" BorderBrush="#FFFFFF" Background="#FFFFFF">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Calendar x:Name="PART_Calendar" Grid.Column="0" SelectionMode="SingleDate"
                                                  IsTodayHighlighted="False" Style="{DynamicResource NewCalendarStyle}"
                                                  SelectedDate="{Binding Path=SelectedDateTime,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource CalendarConverter},Mode=OneWay}" />
                                        <Grid Grid.Column="1"
                                              Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},Path=NoTime,Converter={StaticResource TimeContainerConverter},Mode=OneWay}">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Border Grid.Row="0" Width="120" Height="120" BorderThickness="2"
                                                    BorderBrush="#46B4E2" CornerRadius="75" Margin="40 0">
                                                <Canvas HorizontalAlignment="Center">
                                                    <ItemsControl ItemTemplate="{StaticResource FiveMinuteIndicator}"
                                                                  ItemsSource="{StaticResource FiveMinuteKeys}">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <Canvas IsItemsHost="True" />
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                    <Ellipse Canvas.Left="-2"
                                                             Canvas.Top="54"
                                                             Width="6"
                                                             Height="6"
                                                             Fill="#000000" />
                                                    <Rectangle Canvas.Top="27"
                                                               Width="2"
                                                               Height="30"
                                                               HorizontalAlignment="Center"
                                                               Fill="Black"
                                                               RenderTransformOrigin=".5,1">
                                                        <Rectangle.RenderTransform>
                                                            <RotateTransform
                                                                Angle="{Binding Path=SelectedDateTime,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource HourAngleConverter},Mode=OneWay}" />
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                    <Rectangle Canvas.Top="6"
                                                               Width="2"
                                                               Height="51"
                                                               HorizontalAlignment="Center"
                                                               Fill="Black"
                                                               RenderTransformOrigin=".5,1">
                                                        <Rectangle.RenderTransform>
                                                            <RotateTransform
                                                                Angle="{Binding Path=SelectedDateTime,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource MinuteAngleConverter},Mode=OneWay}" />
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                    <Rectangle Canvas.Top="6"
                                                               Canvas.Left="0.75"
                                                               Width="1"
                                                               Height="51"
                                                               HorizontalAlignment="Center"
                                                               Fill="Black"
                                                               Opacity="0.25"
                                                               RenderTransformOrigin=".5,1">
                                                        <Rectangle.RenderTransform>
                                                            <RotateTransform
                                                                Angle="{Binding Path=SelectedDateTime,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource SecondAngleConverter},Mode=OneWay}" />
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                </Canvas>
                                            </Border>
                                            <Grid Grid.Row="1" Margin="0 0 0 10">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ComboBox x:Name="PART_HourComboBox" Grid.Column="0" Width="42"
                                                          Style="{StaticResource NewComboBoxStyle}"
                                                          SelectedItem="{Binding Path=SelectedDateTime,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource HourComboBoxConverter},Mode=OneWay}" />
                                                <Label Grid.Column="1" Content=":" />
                                                <ComboBox x:Name="PART_MinuteComboBox" Grid.Column="2" Width="42"
                                                          Style="{StaticResource NewComboBoxStyle}"
                                                          SelectedItem="{Binding Path=SelectedDateTime,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource MinuteComboBoxConverter},Mode=OneWay}" />
                                                <Label Grid.Column="3" Content=":" />
                                                <ComboBox x:Name="PART_SecondComboBox" Grid.Column="4" Width="42"
                                                          Style="{StaticResource NewComboBoxStyle}"
                                                          SelectedItem="{Binding Path=SelectedDateTime,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource SecondComboBoxConverter},Mode=OneWay}" />
                                                <ComboBox x:Name="PART_AmPmSwitcherComboBox" Grid.Column="5"
                                                          Margin="5,0,0,0" Width="52"
                                                          Style="{StaticResource NewComboBoxStyle}"
                                                          SelectedItem="{Binding Path=SelectedDateTime,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource AmPmComboBoxConverter},Mode=OneWay}" />
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#000000" TargetName="DatePickerBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>